{"meta":{"title":"MikeShi's Notes","subtitle":null,"description":"I don't know where I belong,but I'll be moving on.","author":"MikeShi","url":"http://yoursite.com"},"pages":[{"title":"","date":"2018-01-11T20:39:37.219Z","updated":"2014-08-07T12:21:07.000Z","comments":true,"path":"googlefa376151171bdf9e.html","permalink":"http://yoursite.com/googlefa376151171bdf9e.html","excerpt":"","text":"google-site-verification: googlefa376151171bdf9e.html"},{"title":"About","date":"2018-01-11T20:38:21.164Z","updated":"2018-01-11T20:29:13.059Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2018-01-11T20:38:21.158Z","updated":"2018-01-11T20:29:13.063Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2018-01-11T20:38:21.169Z","updated":"2018-01-11T20:29:13.072Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"离奔三又近了一步","slug":"birthday-2014","date":"2017-04-02T14:08:19.603Z","updated":"2014-11-30T02:24:17.000Z","comments":true,"path":"2017/04/02/birthday-2014/","link":"","permalink":"http://yoursite.com/2017/04/02/birthday-2014/","excerpt":"","text":"&emsp;&emsp;昨天头昏昏沉沉的，到校医院一检查，医生姐姐看了看体温计很淡定的说了句38度5，我诧异了一下“高烧啊”&gt;_&lt;医生姐姐又很淡定的来了句只能算是中等程度ORZ。开了药，拖着步子回寝室，吃完药躺床上从昨天6点睡到现在才爬起来默默地写写blog。&emsp;&emsp;一早醒来，打开iPad就看到褒哥和包子的生日祝福，瞬间心情就好了很多，加上昨天到货的木馒头，这个生日也是蛮有意义的，不多写了，要去看康斯坦丁了，还有21天考托&gt;_&lt;T^T,加油。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/categories/随笔/"}],"tags":[{"name":"生日","slug":"生日","permalink":"http://yoursite.com/tags/生日/"}]},{"title":"国庆小记","slug":"National-Day","date":"2017-04-02T14:08:18.590Z","updated":"2014-10-10T03:32:45.000Z","comments":true,"path":"2017/04/02/National-Day/","link":"","permalink":"http://yoursite.com/2017/04/02/National-Day/","excerpt":"","text":"本来说好昨天写完的，结果就拖到了今天，拖延症真心伤不起&gt;_&lt;昨天去实验室本来想大干一场（我真的不是因为寝室电用完了才去的=￣ω￣=），可是现实是残酷的。。。国重的超算又宕机了，撸了几把炉石就无奈的回到了寝室，拉上室友一起先爬岳麓山然后又去长沙油炸社吃了烧烤，瞬间觉得整个人生是如此的美好——吃吃喝喝玩玩乐乐睡睡（怎么突然感觉和某种动物好像？！）。一入大三，就觉得自己有好多事要做，可是在这个关键的时候我却什么都不想干，连Python都不想玩了。。。这学期给自己定下了很多目标： 把Toefl考过。 把GRE单词背完。 项目认真做，做出点东西。 Python用WeRobot搭一个像中南助手一样的微信公众号出来。 把成绩搞好。 不过好像现在一向都没完成，在给大一孩子开班会的时候还说让他们好好学习，争取在大一大二的时候把GT都考过了，可是看看自己呢，好惭愧。。。大一的时候体会到了一下恋爱的感觉，可是并没有想象中那么美好，更多的还是苦涩，最后也是一个悲伤的结局。大二想要努力搞学习好像和现实的差距好大。今年要是能把上面的那五个目标都搞定就好了，如果再能遇到一个对的人，我觉得我真的会觉得很开很开心，要是能做一个炫酷又懂生活的人最棒了&gt;_&lt;————————————————————————Update——————————————————————第四项已完成，欢迎大家加我的微信公众号shily_me，关注后可以向我要激活码开启更多隐藏功能。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/categories/随笔/"}],"tags":[{"name":"杂感","slug":"杂感","permalink":"http://yoursite.com/tags/杂感/"}]},{"title":"Python字典操作中注意事项","slug":"python-bug","date":"2017-04-02T14:08:18.277Z","updated":"2014-09-04T09:11:30.000Z","comments":true,"path":"2017/04/02/python-bug/","link":"","permalink":"http://yoursite.com/2017/04/02/python-bug/","excerpt":"","text":"我在进行字典操作的时候，碰到了Python中一个不算是坑的坑，让我找bug找了一个多小时，逻辑错误果然伤不起。。。在Python中dict.fromkeys(seq,val=None)的命令为创建并返回一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值(默认为None)。**但是注意在设置val=[]是，采取的是引用，而不是为每个键产生一个独立的列表，在采取列表操作的时候可能会出错，所以在使用这个内置函数的时候要避免此类错误。例子如下：&gt;&gt;&gt; a=&#123;&#125;.fromkeys([1,2,3],[])&gt;&gt;&gt; a&#123;1: [], 2: [], 3: []&#125;&gt;&gt;&gt; a[1].append(\"b\")#可能产生一个引用的逻辑错误&gt;&gt;&gt; a&#123;1: ['b'], 2: ['b'], 3: ['b']&#125;","categories":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/categories/Python/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"},{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"初学MongoDB","slug":"python-pymongo","date":"2017-04-02T05:37:34.312Z","updated":"2014-09-26T14:27:21.000Z","comments":true,"path":"2017/04/02/python-pymongo/","link":"","permalink":"http://yoursite.com/2017/04/02/python-pymongo/","excerpt":"","text":"今天初学MongoDB，感觉比关系型数据库好上手多了，而且比较符合人类思维也不用担心Sql注入之类的问题，其实本来不想换数据库的，这都是被WeRobot逼的，谁叫它只支持NoSql数据库啊，T^T，不过上手感觉还不错，比Mysql简单多了，半小时就上手了，就是Mysql向MongoDB数据迁移比较麻烦，出现了很多问题，下面是我找到的解决办法，就记录下来备忘。 首先在安装目录bin文件夹下shift+左键打开cmd，执行以下命令：mongod --logpath D:/mongodb/logs/mongodb.log --logappend--dbpath D:/mongodb/data/db --directoryperdb --serviceName MongoDB --install 该命令行指定了日志文件：/logs/MongoDB.log，日志是以追加的方式输出的。数据文件目录：/data/db，并且参数–directoryperdb说明每个DB都会新建一个目录。Windows服务的名称：MongoDB；以上的三个参数都是可以根据自己的情况而定的。最后是安装参数：–install，与之相对的是–remove，以后就可以在cmd下用命令net start MongoDB和net stop MongoDB来启动和停止MongoDB了，也可以在本地服务中看到。","categories":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/categories/Python/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"},{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"},{"name":"数据分析","slug":"数据分析","permalink":"http://yoursite.com/tags/数据分析/"},{"name":"MogoDB","slug":"MogoDB","permalink":"http://yoursite.com/tags/MogoDB/"}]},{"title":"获取Python脚本所在目录的正确方法","slug":"require-proper-python-file-path","date":"2015-11-18T00:22:26.000Z","updated":"2015-11-17T11:32:45.000Z","comments":true,"path":"2015/11/17/require-proper-python-file-path/","link":"","permalink":"http://yoursite.com/2015/11/17/require-proper-python-file-path/","excerpt":"","text":"以前的方法如果是要获得程序运行的当前目录所在位置，那么可以使用os模块的os.getcwd()函数。 正确的方法但以上这些其实都不是脚本文件所在目录的位置,获取Python脚本所在目录实际应使用os.path.split(os.path.realpath(__file__))[0]其中__file__虽然是所在.py文件的完整路径，但是这个变量有时候返回相对路径，有时候返回绝对路径，因此 还要用os.path.realpath()函数来处理一下。","categories":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/categories/Python/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"},{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Linux下Python编译安装Scipy","slug":"python-scipy","date":"2015-03-08T02:00:00.000Z","updated":"2015-11-17T11:35:04.000Z","comments":true,"path":"2015/03/07/python-scipy/","link":"","permalink":"http://yoursite.com/2015/03/07/python-scipy/","excerpt":"","text":"SciPy简介SciPy是一个开源的Python算法库和数学工具包。但是由于依赖一些fortran库在Linux下很难编译安装，下面便是我经过一天的摸索找到的安装方法，以飨大家。 SciPy安装方法编译BLAS首先编译并静态链接Fortran库BLAS和LAPACK。mkdir -p ~/src/cd ~/src/wget http://www.netlib.org/blas/blas.tgztar xzf blas.tgzcd BLAS## NOTE: The selected Fortran compiler must be consistent for BLAS, LAPACK, NumPy, and SciPy.## For GNU compiler on 32-bit systems:#g77 -O2 -fno-second-underscore -c *.f # with g77#gfortran -O2 -std=legacy -fno-second-underscore -c *.f # with gfortran## OR for GNU compiler on 64-bit systems:#g77 -O3 -m64 -fno-second-underscore -fPIC -c *.f # with g77gfortran -O3 -std=legacy -m64 -fno-second-underscore -fPIC -c *.f # with gfortran## OR for Intel compiler:#ifort -FI -w90 -w95 -cm -O3 -unroll -c *.f# Continue below irrespective of compiler:ar r libfblas.a *.oranlib libfblas.arm -rf *.oexport BLAS=~/src/BLAS/libfblas.a 根据Linux版本执行g77/gfortran/ifort 5条命令中的一条，下面的LAPACK安装同样需要Fortran编译器并且应与编译BLAS库的编译器相同。 编译LAPACK以gfortran编译器为例mkdir -p ~/srccd ~/src/wget http://www.netlib.org/lapack/lapack.tgztar xzf lapack.tgzcd lapack-*/cp INSTALL/make.inc.gfortran make.inc # On Linux with lapack-3.2.1 or newermake lapacklibmake cleanexport LAPACK=~/src/lapack-* 如果Linux系统是64位那么应对make.inc进一步修改,在OPTS和NOOPT选项后加上-m64和-fPIC选项。修改后的make.inc例子如下：##################################################################### LAPACK make include file. ## LAPACK, Version 3.5.0 ## November 2013 ######################################################################SHELL = /bin/sh# # Modify the FORTRAN and OPTS definitions to refer to the# compiler and desired compiler options for your machine. NOOPT# refers to the compiler options desired when NO OPTIMIZATION is# selected. Define LOADER and LOADOPTS to refer to the loader and# desired load options for your machine.#FORTRAN = gfortranOPTS = -O2 -frecursive -m64 -fPICDRVOPTS = $(OPTS)NOOPT = -O0 -frecursive -m64 -fPICLOADER = gfortranLOADOPTS =## Timer for the SECOND and DSECND routines## Default : SECOND and DSECND will use a call to the EXTERNAL FUNCTION ETIME#TIMER = EXT_ETIME# For RS6K : SECOND and DSECND will use a call to the EXTERNAL FUNCTION ETIME_# TIMER = EXT_ETIME_# For gfortran compiler: SECOND and DSECND will use a call to the INTERNAL FUNCTION ETIMETIMER = INT_ETIME# If your Fortran compiler does not provide etime (like Nag Fortran Compiler, etc...)# SECOND and DSECND will use a call to the INTERNAL FUNCTION CPU_TIME# TIMER = INT_CPU_TIME# If neither of this works...you can use the NONE value... In that case, SECOND and DSECND will always return 0# TIMER = NONE## Configuration LAPACKE: Native C interface to LAPACK# To generate LAPACKE library: type 'make lapackelib'# Configuration file: turned off (default)# Complex types: C99 (default)# Name pattern: mixed case (default)# (64-bit) Data model: LP64 (default)## CC is the C compiler, normally invoked with options CFLAGS.#CC = gccCFLAGS = -O3## LAPACKE has also the interface to some routines from tmglib,# if LAPACKE_WITH_TMG is selected, we need to add those routines to LAPACKE#LAPACKE_WITH_TMG = Yes## The archiver and the flag(s) to use when building archive (library)# If you system has no ranlib, set RANLIB = echo.#ARCH = arARCHFLAGS= crRANLIB = ranlib## Location of the extended-precision BLAS (XBLAS) Fortran library# used for building and testing extended-precision routines. The# relevant routines will be compiled and XBLAS will be linked only if# USEXBLAS is defined.## USEXBLAS = YesXBLASLIB =# XBLASLIB = -lxblas## The location of the libraries to which you will link. (The# machine-specific, optimized BLAS library should be used whenever# possible.)#BLASLIB = ../../librefblas.aLAPACKLIB = liblapack.aTMGLIB = libtmglib.aLAPACKELIB = liblapacke.a 安装SciPy Package执行 pip install scipy命令即可成功安装SciPy。","categories":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/categories/Python/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"},{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Python通过xlwt模块编辑xls文件","slug":"python-xlwt","date":"2014-08-10T01:01:29.000Z","updated":"2014-09-26T14:32:36.000Z","comments":true,"path":"2014/08/09/python-xlwt/","link":"","permalink":"http://yoursite.com/2014/08/09/python-xlwt/","excerpt":"","text":"xlwt模块简介xlwt是Python一个编辑xls文件的模块，它生成的文件能够很好的与大部分主流电子表格办公软件如Excel2000/2003/OpenOffice/Gnumeric等兼容，并且完美支持unicode。通过xlwt模块可以使Excel表格在任何平台生成，不需要依赖Excel或者COM服务器。 下载地址xlwt-future 0.8.0 安装方法下载后解压缩文件，然后cd到目标文件夹，执行以下命令即可：python setup.py install 简单使用1.导入xlwtimport xlwt 2.创建Workbookfile = xlwt.Workbook() #注意这里的Workbook首字母是大写 3.新建一个sheettable = file.add_sheet('sheet name') 4.写入数据table.write(行,列,value)table.write(0,0,'test') 5.保存文件file.save('demo.xls') 6.使用style调整表格样式style = xlwt.XFStyle() # 初始化样式font = xlwt.Font() #为样式创建字体font.name = 'Times New Roman' #选择字体font.bold = True #是否加粗style.font = font #为样式设置字体table.write(0, 0, 'some bold Times text', style) # 使用样式font.height = 500 #设置高度al = xlwt.Alignment()al.horz = xlwt.Alignment.HORZ_CENTER #设置水平居中al.vert = xlwt.Alignment.VERT_CENTER #设置垂直居中al.wrap = xlwt.Alignment.WRAP_AT_RIGHT #设置文字可以换行style.alignment = al 7.合并表格file.write_merge(row_1,row_2,col_1,col_2,value,style)file.write_merge(1,2,3,5,'value',style) #合并从第1行到第2行第3列到第4列的表格 例子更详细的例子请参考python编译xlwt模块后，解压缩文件夹下../xlwt/examples里面的代码。","categories":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/categories/Python/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"},{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"祝你一路顺风","slug":"across-America","date":"2014-08-09T02:43:35.000Z","updated":"2014-08-08T16:13:25.000Z","comments":true,"path":"2014/08/08/across-America/","link":"","permalink":"http://yoursite.com/2014/08/08/across-America/","excerpt":"","text":"&emsp;&emsp;我第一次对你有印象还是在33栋的楼梯上碰到你，我俩聊了一些关于科创的事情，最后你突然问我：有出国的打算么？我说：有呀。于是从那时起，我俩在生活中便有了交集。本以为是大学生活中一位匆匆过客，却没想到在之后的时光里你对我的影响有那么深刻。 大一的时候带我到实验室，初次对实验室有了大概的印象，本以为实验室是做实验的地方，应该摆满各种仪器试管烧杯炉子，居然没想到也可以住人，三观彻底颠覆了好吗，而且实验室那叫一个“整洁”。当然也被震撼了，居然还有看paper看到3点，6点钟继续起来做实验的人。瞬间有了一种膜拜之感（膝盖中了一箭）。 打数模的时候，从鼓励我和猪猪大一的时候不要畏惧参加数模培训到已经拿了M奖的你在赛前还帮我们联系指导老师，比赛的时候帮我们理思路。打美赛的时候，因为时间很紧，忘了找你帮忙，打完比赛，你还一脸幽怨的对我说：怎么没找我来讨论讨论题目？每每想到这个场景，总觉得你真的是太可爱了呢。还有每次见面时都会问：GPA怎么样，Research怎么样，题做了没？（每次见你好想绕道走有木有？！压力太大了有木有？！)这种督促让我学到了很多实实在在的东西，通过数模熟悉了Matlab，之后又自学了语法很像的Python,再到现在Python日益熟练，编了很多脚本，也做了很多东西（Blog,网站,GUI什么的）在学习路上在编程路上的一点点进步真的离不开你的督促和帮助。Thank you very much. 导师也是你帮我联系的哦，而且居然帮我选了一个完美融合计算机和材料学的方向，这个太nice啦，真的很谢谢你帮我找到了一个这么适合我的方向。你还帮我引荐了一位美女学姐，没想到见面后居然是已经联系了快一年的丁盈姐。不得不感叹这个世界太小，时间太快。之后成功的进了龚老师的团队，慢慢地认识了组里的每一个人。也感谢大师兄，丁盈姐，强哥，王师兄，魏彩师姐还有嘉玺学长在我求知路上的帮助^_^没有你们我不可能走得这么远。 这个夏天又通过你认识了一昆，泽宇，时文3个好兄弟（猪猪咱俩太熟悉就不多说什么了，嘿嘿）。还进行了一次印象深刻的头脑风暴，也一起去酒吧High过。你去美国之后，放心吧，我们一定会在未来迈出更加坚实的步伐。 —————————————————————我是可爱的分割线？——————————————————— 没想到整整一年都过去了，你的发型也变3、4回（我观察的可仔细了），我也成功地由小石学弟变成了小石学长（你都成学叔下架了，哈哈）。今天下午上数模课，你打电话跟我说你明天就要飞上海，后天就要飞底特律的时候，我愣了一下，还以为你在骗我呢？！感觉好突然。只怪时间过得太快，那年今日你还在实验室守炉子，督促我和猪猪打数模，码matlab程序，我俩也在傻乎乎地试图从25万次彩票开奖记录中找出中奖的诀窍（结果当然是不可能好么，完全随机啊，我还尝试买了一注，结果血本无归T^T)。没想到今天你就要踏上去美国的旅途了呢。在CSU能碰到像你一样的大牛很不容易，能碰到愿意手把手指导我们的大牛更不容易。我不知道该多说什么了，只能谢谢你对我的帮助，祝你一路顺风，4年后成功从Mr.Wu变成Dr.Wu。分享一句话与君共勉：人生本来就一无所有，没有理由不追随心之所向。 那一天知道你要走我们一句话也没有说当午夜的钟声敲痛离别的心门却打不开你深深的沉默那一天送你送到最后我们一句话也没有留当拥挤的月台挤痛送别的人们却挤不掉我深深的离愁我知道你有千言你有万语却不肯说出口你知道我好担心我好难过却不敢说出口当你背上行囊卸下那份荣耀我只能让眼泪留在心底面带着微微笑用力的挥挥手祝你一路顺风当你踏上月台从此一个人走我只能深深的祝福你深深的祝福你最亲爱的朋友祝你一路顺风那一天送你送到最后我们一句话也没有留当拥挤的月台挤痛送别的人们却挤不掉我深深的离愁我知道你有千言你有万语却不肯说出口你知道我好担心我好难过却不敢说出口当你背上行囊卸下那份荣耀我只能让眼泪留在心底面带着微微笑用力的挥挥手祝你一路顺风当你踏上月台从此一个人走我只能深深的祝福你深深的祝福你最亲爱的朋友祝你一路顺风 —————————————————————我是可爱的分割线？———————————————————前排打一个小广告，只要你能帮我完成炉石日常任务，我愿意分享一个国服战网账号，购买了星际争霸2数字典藏包，炉石所有蓝白卡基本齐全，拥有大部分紫卡，十五六张橙卡，上赛季打到天梯3级，NAXX已开通所有区，有意者速速私信我哦^_^","categories":[{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/categories/随笔/"}],"tags":[{"name":"飞跃","slug":"飞跃","permalink":"http://yoursite.com/tags/飞跃/"}]},{"title":"Python os模块简介","slug":"python-move-files","date":"2014-08-08T22:31:58.000Z","updated":"2015-11-17T07:13:10.000Z","comments":true,"path":"2014/08/08/python-move-files/","link":"","permalink":"http://yoursite.com/2014/08/08/python-move-files/","excerpt":"","text":"概括Python的os模块包含了很多很有用的关于操作文件和目录的函数。如果你希望你的程序能够与平台无关的话，这个模块是尤为重要的。即它允许一个程序在编写后不需要任何改动，也不会发生任何问题，就可以在Linux和Windows下运行，这也是他的强大之处。 常用函数1.获得当前路径：os.getcwd()&gt;&gt;&gt; os.getcwd()'C:\\\\Python34'&gt;&gt;&gt; 2.获得目录中的内容： os.listdir(path) 类似于windows下的dir命令，括号里的参数是你想列的目录。在windows下路径最好是双反斜杠，或者在路径前面加r。&gt;&gt;&gt; os.listdir('C:\\\\python34')['basemap-wininst.log', 'DLLs', 'Doc', 'include', 'Lib', 'libs', 'LICENSE.txt', 'lxml-wininst.log', 'matplotlib-wininst.log', 'netCDF4-wininst.log', 'NEWS.txt', 'numpy-wininst.log', 'pandas-wininst.log', 'pyparsing-wininst.log', 'python.exe', 'pythonw.exe', 'qt.conf', 'README.txt', 'Removebasemap.exe', 'Removelxml.exe', 'Removematplotlib.exe', 'RemovenetCDF4.exe', 'Removenumpy.exe', 'Removepandas.exe', 'Removepyparsing.exe', 'Removerequests.exe', 'Removescipy.exe', 'requests-wininst.log', 'scipy-wininst.log', 'Scripts', 'tcl', 'Tools']&gt;&gt;&gt; 3.创建目录：os.mkdir(path)参数为要创建的目录所在的位置路径比如：os.mkdir('E:\\\\book\\\\temp') 4.删除目录：os.rmdir(path)参数为要删除目录所在的路径，注意此目录必须为空才能删除，否则出错。5.判断是否为目录 或者文件：os.isdir(path)，os.isfile(path)返回True则为目录或者文件，否则相反6.更改当前工作目录：os.chdir(path)参数为要设的目录&gt;&gt;&gt; os.getcwd()'C:\\\\Python34'&gt;&gt;&gt; os.chdir('C:\\\\Python34\\\\libs')&gt;&gt;&gt; os.getcwd()'C:\\\\Python34\\\\libs'&gt;&gt;&gt; 7.删除文件os.remove(path)&gt;&gt;&gt;os.remove('C:\\\\python34\\\\test.py')&gt;&gt;&gt; 8.重命名文件或者目录: os.rename(oldpath,newpath)这个函数特别强大不仅可以改变文件名称还可以在相同分区内改变文件位置，十分方便。&gt;&gt;&gt;os.rename('C:\\\\python34\\\\1.py','C:\\\\2.py')&gt;&gt;&gt; 9.另外OS模块还有一个非常方便的方法，可以打开windows下的可执行程序，word文档啦，exe文件啦，只要是可执行的，都可以使用os的startfile打开，前提是你在系统中已经安装了相应的打开程序。比如：&gt;&gt;&gt;import os&gt;&gt;&gt;os.startfile('D:\\\\movie\\\\test.mkv') 然后就会执行你电脑里默认的视频播放程序打开test.mkv视频播放。很方便吧。 示例程序我每回下载的视频文件都放在迅雷文件夹里面看完后每回都要手动进行分门别类的整理觉得很不爽，于是就利用Python花了2个小时编了一个小程序来自动帮我归档视频，下面是源代码：import osimport reimport timedef get_list(old_list,pattern): new_list = [] for i in old_list: if pattern.search(i): new_list.append(i) return new_list#根据下载时间来判断是否归档该文件def get_new_list(old_list): new_list = [] for i in old_list: element_time = os.stat(i).st_mtime difference = (time.time() - element_time)/86400 if difference &gt;=4 : new_list.append(i) return new_list#归档相关文件def change_dir_list(old_list): for i in old_list: if 'The.Last.Ship' in i: old_list.remove(i) os.rename(i,r'H:/电影/末日孤舰/'+i) print(i.ljust(35)+'移至H:/电影/末日孤舰') elif 'Tyrant' in i: old_list.remove(i) os.rename(i,r'H:/电影/Tyrant/'+i) print(i.ljust(35)+'移至H:/电影/Tyrant') elif '24.S09' in i: old_list.remove(i) os.rename(i,r'H:/电影/24h/'+i) print(i.ljust(35)+'移至H:/电影/24h') elif 'The.Flash' in i: old_list.remove(i) os.rename(i,r'H:/电影/The Flash/'+i) print(i.ljust(35)+'移至H:/电影/The Flash') else: os.rename(i,r'H:/电影/'+i) print(i.ljust(35)+'移至H:/电影') return old_listdef change_dir(list_dir): pattern = re.compile(r'.*\\.(mkv|mp4|rmvb|ass|srt)$') #正则匹配视频和字幕文件 os.chdir(list_dir) old_list = os.listdir() new_list = get_list(old_list,pattern) move_list = get_new_list(new_list) new_move_list = change_dir_list(move_list[:]) return len(move_list)if __name__ == \"__main__\": a = time.time() b = change_dir(r'H:\\迅雷下载') dir_list = [i for i in os.listdir() if os.path.isdir(i)] for i in dir_list: c = change_dir('H://迅雷下载//'+i) b = b+c print('本次共移动%s部电影' %b) print(time.time()-a) input('按Enter键退出') 自从用了这个小脚本，帮我节省了好多整理文件的时间，果然是科技改变生活啊。","categories":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/categories/Python/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"},{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Python消息统计","slug":"python-select-member","date":"2014-08-07T22:55:25.000Z","updated":"2014-08-07T11:58:32.000Z","comments":true,"path":"2014/08/07/python-select-member/","link":"","permalink":"http://yoursite.com/2014/08/07/python-select-member/","excerpt":"","text":"这是我统计QQ群成员发言数的Python代码，需要依赖pandas库,下载后解压缩文件，然后cd到目标文件夹，执行以下命令：python setup.py install 然后pandas库就可以使用了，这是我统计发言数的源代码：from pandas import Series, DataFrameimport pandas as pddef get_name(txt_list): name_list =[] new_name_list =[] for i in txt_list: a = i.split(' ') if len(a)==3: if len(a[1]) ==8 and len(a[0]) ==10: name_list.append(a[2]) for i in name_list: if i[0]== '【': new_name_list.append(i[4:]) else: new_name_list.append(i) return new_name_listif __name__ == \"__main__\": file_dir = r'C:\\Users\\46474_000\\Desktop\\一帮逗比欢乐多.txt' f = open(file_dir,'r',encoding= 'utf-8').readlines()[8:] f = [i.strip() for i in f if i.strip() != ''] f = f[6:] name_list = Series(get_name(f)) a= name_list.value_counts() for i in a.index: print(i,a.ix[i]) 只要修改一下file_dir将目录指向导出的QQ消息记录就可以运行了。","categories":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/categories/Python/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"},{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"Hexo搭建教程(2)","slug":"hexo-2","date":"2014-08-07T17:11:30.000Z","updated":"2014-09-26T14:33:18.000Z","comments":true,"path":"2014/08/07/hexo-2/","link":"","permalink":"http://yoursite.com/2014/08/07/hexo-2/","excerpt":"","text":"安装指南Pacman是一款为Hexo打造的一款扁平化，有着响应式设计的主题。本站正是使用了该主题，同时你也可以访问Demo查看效果。主题源码托管在Github上。 安装$ git clone https://github.com/A-limon/pacman.git themes/pacman Pacman需要安装Hexo 2.4.5 或以上版本 请先升级您的Hexo程序，再启用此主题。 启用修改你的博客根目录下的config.yml配置文件中的theme属性，将其设置为pacman。 更新cd themes/pacmangit pull 请先备份你的_config.yml 文件后再升级 配置指南Pacman主题提供了丰富的配置属性，配置文件_config.yml位于主题根目录下。配置文件中已经包含了详细的英文注释，所以下面就用中文进行说明。 属性##### Menumenu: Home: / Archives: /archives #### Widgetswidgets: - category- tag- rss#### RSSrss: #### Imageimglogo: enable: true src: /img/logo.svg favicon: /img/favicon.ico apple_icon: /img/pacman.jpg#### Author Avatar Pictureauthor_img_enable: truedataURI: falseauthor_img_data: author_img: /img/author.jpg#### FontShowCustomFont: true #### Toctoc: article: true aside: true #### Fancyboxfancybox: true #### Author informationauthor: google_plus: intro_line1: intro_line2: weibo: twitter: github: facebook: tsina: #### Commentduoshuo: enable: false short_name: #### Share buttonjiathis: enable: false id: tsina:#### Analyticsgoogle_analytics: enable: false id: site:#### Custom Searchgoogle_cse: enable: false cx:","categories":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/categories/hexo/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"}]},{"title":"Hexo搭建教程(1)","slug":"hexo-1","date":"2014-08-07T13:48:25.000Z","updated":"2014-09-26T14:33:21.000Z","comments":true,"path":"2014/08/07/hexo-1/","link":"","permalink":"http://yoursite.com/2014/08/07/hexo-1/","excerpt":"","text":"概括一直想搭建一个博客，但是自己从头搭建一个实在是太费心力，直到我看见了hexo，hexo出自台湾大学生 tommy351 之手，是一个基于Node.js的静态博客程序，其编译上百篇文字只需要几秒。hexo生成的静态网页可以直接放到GitHub Pages，BAE，SAE等平台上。先看看tommy是如何吐槽Octopress的 →＿→ Hexo颯爽登場 。 安装准备工作 安装node.js 安装git 安装hexo$ npm install -g hexo 配置初始化然后，执行init命令初始化hexo到你指定的目录$ hexo init &lt;folder&gt;$ hexo install 也可cd到你指定的目录然后init 生成静态页面cd 到你的init目录，执行如下命令，生成静态页面至hexo\\public\\目录。$ hexo g 本地启动执行如下命令，启动本地服务，进行文章预览调试。$ hexo s 浏览器输入http://localhost:4000 就可以看到效果。","categories":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/categories/hexo/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/tags/技术/"}]},{"title":"第一天，新的开始","slug":"first","date":"2014-08-07T02:02:02.000Z","updated":"2014-08-07T05:26:54.000Z","comments":true,"path":"2014/08/06/first/","link":"","permalink":"http://yoursite.com/2014/08/06/first/","excerpt":"","text":"这是我在GitHub上的第一篇文章，从今天开始我要甩掉过去的自我，用一年的汗水来敲开美利坚的大门。","categories":[{"name":"blog","slug":"blog","permalink":"http://yoursite.com/categories/blog/"}],"tags":[{"name":"飞跃","slug":"飞跃","permalink":"http://yoursite.com/tags/飞跃/"}]},{"title":"HongKong","slug":"HongKong","date":"2013-10-08T01:00:00.000Z","updated":"2014-08-08T09:00:07.000Z","comments":true,"path":"2013/10/07/HongKong/","link":"","permalink":"http://yoursite.com/2013/10/07/HongKong/","excerpt":"","text":"&emsp;&emsp;一次说走就走的旅行，背上身上的旅行包，坐上南下的火车，8个小时的硬座，就到了广州。十一的时候，人不是特别多，没有出现帝都和魔都看人海的盛景，从广州火车站出来坐了大概3、4站地铁就到了青年旅社，虽然是第一次住青旅，可是却没让我失望哦，我住的是男生6人间，里面很干净，一点都不乱，比宿舍好一点，有种家的感觉，wifi很快，老板说他办的是100m的，不过我们用wifi，所以达不到那么高，但是确实很快，ipad看视频根本不卡。我们的第一站中山大学，走在中山大学南校区，很多古树，郁郁葱葱的大树，林荫地，阳光漫洒，真的很美，中大的餐厅也挺好的，装修超漂亮，中南的一比果断弱爆了。之后去了沙面，沙面可以相当于北京的东交民巷，里面很多民国时期的使领馆，不过没想到，波兰领事馆和朝鲜领事馆居然还在里面正常工作。晚上的时候我们去了小蛮腰，这是唯一一次让我觉得很挤的时候，十一第一天，人超多，跟着人群，排了一个小时的队，上了小蛮腰，在这里吐槽以下小蛮腰的票价，上到白云观光厅要150元，要上到塔顶又要90元，学生套票要210，真的是有点贵了。到了塔顶真的很棒，一览广州塔美景，上面风很大，还下了一点点小雨，吹风的感觉真的很棒，广州的夜景也很棒，俯瞰海心沙的感觉很好。第二天，睡到自然醒，就去看了漫展，很不错，很多coser，蛮好玩的，还有很多动漫周边卖，以及漫画作者的亲笔签售会。说到广州不能不提它的吃的，早茶真的很好吃，很精致，客家人的慢生活，很悠闲。不过对于我这种肉食动物来说，猪脚饭神马的大爱啊，我会说我在广州和深圳吃了3、4天的潮汕隆江猪脚饭&gt;_&lt;真的好好吃，肥而不腻，再配上酸菜，以及猪骨，苹果，胡萝卜一起熬得老汤，真的是一种享受。&emsp;&emsp;4号，和谐号动车，去了深圳，相比广州，深圳玩的就很少，地铁也没有广州的方便，广州的13条地铁线路真的很强大。高二的时候来到深圳住在老街旁边，没想到这回又是住在老街旁边，一晃三年过去了，可过去的事情还历历在目，白驹过隙，时间飞快&gt;_&lt;这家青旅很有特色，装修很好，而且有很多义工，特别欢乐，老板还切哈密瓜给我们吃。去了华强北，里面好多电子产品，铺天盖地，参观了一发，还不错。第二天一个人，默默地早起，开始一天的香港之旅，由于是L签我提前一天，在淘宝上找好卖家，花了5块钱组了个散团过了关，要是在口岸现场要50，非自由行城市童鞋要注意哦，出发的早，于是花了40分钟就过了关，踏进了资本主义社会的土地，嘎嘎。花了$150办了一张八达通卡，八达通跟我们的校园卡差不多，基本上全港的便利店7-11，麦当劳，地铁和巴士都可以刷的。在这里吐槽一下资本主义的罪恶，广州从城西坐到城东才5块钱啊，来回才10块钱，我从罗湖坐到中环又从中环坐回来居然花了我100+港币，心在滴血有木有，让我这穷游一族情何以堪，去了ifc和又一城，apple store果然很棒，土豪金果断是三种中最好看的，本来以为土狗灰或者东北银会好一点，结果看了真机，还是土豪金漂亮，香槟色淡淡的，手感有非常棒，在丰泽和苏宁看了surface，pro和rt的差距真心不是一点半点，pro的那根电磁笔大爱啊，可惜买不起T^T。在香港逛了一天，发现什么都买不起，太贵了，中午去麦当劳吃了一顿，那张餐纸很有爱的，嘿嘿，在香港简单逛了一圈，晚上就回深圳了，最后一天去了中英街，真的很坑爹，不要去，没有什么好看的，卖的东西也不便宜呢。不过可以去莲花山看日落和小梅沙看海，都很棒，可是我去了香港，就木有去，算是遗憾吧，下回有机会再去，八达通了还有几十港币呢。&emsp;&emsp;坐了10几个小时的硬座，2点/3点/4点/5点醒了好多次，早上滚回了长沙，头还是晕晕乎乎的，睡了一下午终于缓过来了，这趟穷游之旅还是蛮好的，背上旅行包，一次说走就走的旅行。","categories":[{"name":"blog","slug":"blog","permalink":"http://yoursite.com/categories/blog/"}],"tags":[{"name":"旅行","slug":"旅行","permalink":"http://yoursite.com/tags/旅行/"}]}]}